package org.dspace.app.webui.ubc.scheduler;

import org.apache.log4j.Logger;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import static org.quartz.JobBuilder.newJob;
import org.quartz.JobDetail;
import org.quartz.Scheduler;

import org.quartz.SchedulerException;
import static org.quartz.SimpleScheduleBuilder.simpleSchedule;
import org.quartz.Trigger;
import static org.quartz.TriggerBuilder.newTrigger;
import org.quartz.impl.StdSchedulerFactory;

public class SchedulerStarter extends HttpServlet
{
    /** log4j logger */
    private static final Logger log = Logger.getLogger(SchedulerStarter.class);

	/** Autogenerated serial */
	private static final long serialVersionUID = 1738736327585377900L;

	private Scheduler scheduler;

	/** 
	 * Convenience method that can be overridden to do stuff when this servlet gets placed into service.
	 */
	@Override
	public void init() throws ServletException {
		try {
			scheduler = StdSchedulerFactory.getDefaultScheduler();
			scheduler.start();
			// define the job and tie it to our HelloJob class
			JobDetail job = newJob(GenerateThumbnailJob.class)
					.withIdentity("job1", "group1")
					.build();
			
			// Trigger the job to run now, and then repeat
			Trigger trigger = newTrigger()
					.withIdentity("trigger1", "group1")
					.startNow()
					.withSchedule(simpleSchedule()
							.withIntervalInMinutes(5) // TODO: CHANGE TO LONGER
							.repeatForever())
					.build();
			// Tell quartz to schedule the job using our trigger
			scheduler.scheduleJob(job, trigger);
		} catch (SchedulerException ex) {
			log.error(ex);
		}
	}

	/* (non-Javadoc)
	 * @see javax.servlet.GenericServlet#destroy()
	 */
	@Override
	public void destroy() {
		try {
			if (scheduler != null) {
				scheduler.shutdown();
			}
		} catch (SchedulerException ex) {
			log.error(ex);
		}
	}
	
}
